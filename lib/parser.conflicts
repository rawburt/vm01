
** Conflict (shift/reduce) in state 5.
** Token involved: WORD
** This state is reached from prog after reading:

list(NEWLINE) WORD

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(NEWLINE) separated_nonempty_list(list(NEWLINE),line) EOF 
              (?)

** In state 5, looking ahead at WORD, shifting is permitted
** because of the following sub-derivation:

line 
instruction 
WORD option(arg) 
     arg 
     . WORD 

** In state 5, looking ahead at WORD, reducing production
** option(arg) ->
** is permitted because of the following sub-derivation:

line list(NEWLINE) separated_nonempty_list(list(NEWLINE),line) // lookahead token appears because list(NEWLINE) can vanish and separated_nonempty_list(list(NEWLINE),line) can begin with WORD
instruction // lookahead token is inherited
WORD option(arg) // lookahead token is inherited
     . 
